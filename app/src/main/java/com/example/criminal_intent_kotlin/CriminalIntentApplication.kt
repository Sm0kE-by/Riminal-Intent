package com.example.criminal_intent_kotlin

import android.app.Application
import com.example.criminal_intent_kotlin.database.CrimeRepository

//Чтобы выполнить работу, как только приложение будет готово, вы можете создать подкласс Application.
// Он позволит вам получить информацию о жизненном
//цикле самого приложения. Создайте класс CriminalIntentApplication, который
//расширяет Application и переопределяет функцию Application.onCreate() для
//инициализации репозитория.

//Экземпляр приложения не будет постоянно уничтожаться и создаваться вновь,
//в отличие от activity или фрагментов классов. Он создается, когда приложение запускается,
// и уничтожается, когда завершается процесс приложения.
//Единственная функция жизненного цикла, которую вам надо переопределить
//в CriminalIntent, — это OnCreate().
//Сейчас нам нужно передать экземпляр приложения в репозиторий в качестве
//объекта Context. Этот объект действителен до тех пор, пока процесс приложения
//находится в памяти, поэтому можно безопасно хранить ссылку на него в классе
//репозитория.
//Чтобы класс приложения можно было использовать в системе, необходимо зарегистрировать его в манифесте.
// Откройте файл AndroidManifest.xml и задайте
//свойство android:name для настройки приложения

//Когда класс приложения будет зарегистрирован в манифесте, операционная система создаст экземпляр
// CriminalIntentApplication при запуске вашего приложения. ОС будет вызывать функцию OnCreate() на экземпляре
//CriminalIntentApplication. CrimeRepository будет инициализирован, и вы сможете
//обращаться к нему из других компонентов.
class CriminalIntentApplication :Application(){

    override fun onCreate() {
        super.onCreate()
        CrimeRepository.initialize(this)
    }

}